{"title":"iOS 自动布局进阶之巧用 IBInspectable 和 IB_DESIGNABLE","date":"2017-08-24T02:33:20.000Z","date_formatted":{"ll":"Aug 24, 2017","L":"08/24/2017","MM-DD":"08-24"},"link":"how-to-use-IBInspectable-and-IB-DESIGNABLE","tags":["iOS自动布局"],"categories":["iOS"],"updated":"2019-12-05T03:34:34.331Z","content":"<p>交互设计和 UI 设计水准很大程度影响着用户对应用的评价，iOS 开发发展至今已逾10年，开发者对于界面 UI 编码的习惯逐渐分化成三大流派：</p>\n<a id=\"more\"></a>\n\n<ul>\n<li>code - 易追踪、可复用、便于版本控制，但不直观</li>\n<li>xib - 简单便捷、直观、一一对应，但易冲突</li>\n<li>storyboard - 逻辑清晰、简单易用、直观高效，虽易冲突、复用性不佳，但仍是未来趋势</li>\n</ul>\n<p>xib 和 storyboard 均采用了 Interface Builder（IB）来生成 GUI，通过面板上简单的拖拽替代繁琐冗余的 code 来构建页面。但我们经常发现，既有的功能并不能完全满足布局的需要，那么，我们可以通过在特定的位置定义可视化属性 <code>IBInspectable</code>、定义宏 <code>IB_DESIGNABLE</code> 来精简代码。</p>\n<p>下文具体介绍一下如何使用。</p>\n<blockquote>\n<p>【场景】设置按钮：圆角<code>cornerRadius</code>：8pt、边框颜色<code>borderWidth</code>：1pt、边框宽度<code>borderColor</code>：系统蓝色</p>\n</blockquote>\n<hr>\n<h3 id=\"巧用-IBInspectable\"><strong>巧用 <code>IBInspectable</code></strong><a href=\"how-to-use-IBInspectable-and-IB-DESIGNABLE#巧用-IBInspectable\"></a></h3><p><code>【IBInspectable】</code> 这一属性提供了访问功能的新方式：用户自定义的运行时属性，让支持 KVC 的属性能够在身份检查器（Identity Inspector）的 User Defined Runtime Attributes 中配置。</p>\n<p>它支持修饰的属性类型有：</p>\n<p><code>BOOL</code>、<code>NSNumber</code>、<code>CGPoint</code>、<code>CGSize</code>、<code>CGRect</code>、<code>UIColor</code>、<code>NSString</code>、<code>NSLocalizedString</code>、<code>NSRange</code>、<code>UIImage</code>、<code>NSNull</code>。</p>\n<p>如果想让特定类型的控件设置某个属性，可以为对应的 UIKit 添加分类，为定义该属性时加上 <code>IBInspectable</code>，示例：</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span></pre></td><td class=\"code\"><pre><span class=\"line\">#import &lt;UIKit&#x2F;UIKit.h&gt;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">2</span></pre></td><td class=\"code\"><pre><span class=\"line\"></span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">3</span></pre></td><td class=\"code\"><pre><span class=\"line\">@interface UIButton (HTAdditions)</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">4</span></pre></td><td class=\"code\"><pre><span class=\"line\"></span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">5</span></pre></td><td class=\"code\"><pre><span class=\"line\">@property (nonatomic) IBInspectable CGFloat kCornerRadius;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">6</span></pre></td><td class=\"code\"><pre><span class=\"line\">@property (nonatomic) IBInspectable CGFloat kBorderWidth;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">7</span></pre></td><td class=\"code\"><pre><span class=\"line\">@property (nonatomic,copy) IBInspectable UIColor *gBorderColor;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">8</span></pre></td><td class=\"code\"><pre><span class=\"line\"></span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">9</span></pre></td><td class=\"code\"><pre><span class=\"line\">@end</span></pre></td></tr></table></div></figure>\n\n<p>这时 Xcode 的 Attributes Inspector 栏中就会出现三个新的可编辑属性。</p>\n<img src=\"/how-to-use-IBInspectable-and-IB-DESIGNABLE/visual-properties-1.png\" class=\"article-img\" title=\"Attributes Inspector 显示的可视化属性\">\n\n<p>Identity Inspector 下的 User Defined Runtime Attributes 也会出现相应的 key path 和 value 值。</p>\n<img src=\"/how-to-use-IBInspectable-and-IB-DESIGNABLE/visual-properties-2.png\" class=\"article-img\" title=\"User Defined Runtime Attributes 显示的可视化属性\">\n\n<p>设置好后 run 一下工程就能看到场景中要求的效果，但通常开发者不需要所有的按钮都设置圆角、边框，更多的是采用自定义视图的形式统一处理相似风格的 control。为了更高效地开发，接下来介绍宏定义 <code>IB_DESIGNABLE</code>。</p>\n<hr>\n<h3 id=\"巧用-IB-DESIGNABLE\"><strong>巧用 <code>IB_DESIGNABLE</code></strong><a href=\"how-to-use-IBInspectable-and-IB-DESIGNABLE#巧用-IB-DESIGNABLE\"></a></h3><p><code>【IB_DESIGNABLE】</code> 在类名前加上此宏定义，初始化、布置和绘制方法将被用来在画布上渲染该类的自定义视图。</p>\n<p>操作步骤：</p>\n<ol>\n<li>storyboard 中拖拽一个 UIButton；</li>\n<li>创建父类是 UIButton 的 HTCustomButton 类文件，并在 .h 的 <code>interface</code> 前定义 <code>IB_DESIGNABLE</code>；</li>\n<li>给步骤1按钮的 Custom Class 关联上 HTCustomButton。</li>\n</ol>\n<p>这时我们就可以直接在 User Defined Runtime Attributes 中加入想要的属性，例如圆角、边框宽度等。边框颜色由于 UIColor 类型的特殊性，需要重新定义。</p>\n<p>HTCustomButton.h：</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span></pre></td><td class=\"code\"><pre><span class=\"line\">#import &lt;UIKit&#x2F;UIKit.h&gt;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">2</span></pre></td><td class=\"code\"><pre><span class=\"line\"></span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">3</span></pre></td><td class=\"code\"><pre><span class=\"line\">IB_DESIGNABLE</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">4</span></pre></td><td class=\"code\"><pre><span class=\"line\"></span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">5</span></pre></td><td class=\"code\"><pre><span class=\"line\">@interface HTCustomButton : UIButton</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">6</span></pre></td><td class=\"code\"><pre><span class=\"line\"></span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">7</span></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;** 设置边框颜色可视化 *&#x2F;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">8</span></pre></td><td class=\"code\"><pre><span class=\"line\">@property (nonatomic, strong)IBInspectable UIColor *customBorderColor;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">9</span></pre></td><td class=\"code\"><pre><span class=\"line\"></span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">10</span></pre></td><td class=\"code\"><pre><span class=\"line\">@end</span></pre></td></tr></table></div></figure>\n<p>HTCustomButton.m：</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span></pre></td><td class=\"code\"><pre><span class=\"line\">#import &quot;HTCustomButton.h&quot;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">2</span></pre></td><td class=\"code\"><pre><span class=\"line\"></span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">3</span></pre></td><td class=\"code\"><pre><span class=\"line\">@implementation HTCustomButton</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">4</span></pre></td><td class=\"code\"><pre><span class=\"line\"></span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">5</span></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;**</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">6</span></pre></td><td class=\"code\"><pre><span class=\"line\"> *  设置边框颜色</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">7</span></pre></td><td class=\"code\"><pre><span class=\"line\"> *</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">8</span></pre></td><td class=\"code\"><pre><span class=\"line\"> *  @param customBorderColor 可视化视图传入的值</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">9</span></pre></td><td class=\"code\"><pre><span class=\"line\"> *&#x2F;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">10</span></pre></td><td class=\"code\"><pre><span class=\"line\">- (void)setCustomBorderColor:(UIColor *)customBorderColor &#123;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">11</span></pre></td><td class=\"code\"><pre><span class=\"line\">    self.layer.borderColor &#x3D; customBorderColor.CGColor;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">12</span></pre></td><td class=\"code\"><pre><span class=\"line\">&#125;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">13</span></pre></td><td class=\"code\"><pre><span class=\"line\"></span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">14</span></pre></td><td class=\"code\"><pre><span class=\"line\">@end</span></pre></td></tr></table></div></figure>\n<p>设置好后就可以直接添加或修改相应的属性动态刷新控件，如下图：</p>\n\n\n<hr>\n<h3 id=\"纯代码开发流派如何借助-IB-DESIGNABLE动态查看布局效果\"><strong>纯代码开发流派如何借助 <code>IB_DESIGNABLE</code>动态查看布局效果</strong><a href=\"how-to-use-IBInspectable-and-IB-DESIGNABLE#纯代码开发流派如何借助-IB-DESIGNABLE动态查看布局效果\"></a></h3><p>对于很多被强制勒令用纯代码 coding 的开发者来说，下面介绍的干货绝对会大大提升开发效率。</p>\n<p>举个例子：创建基于 UIView 的 HTMasonryView，以及同名的 .xib 文件，并在 Custom Class 中关联好。接下来在 HTMasonryView.m 中创建并布局 masonryButton，注意添加 <code>IB_DESIGNABLE</code>，代码如下：</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span></pre></td><td class=\"code\"><pre><span class=\"line\">#import &quot;HTMasonryView.h&quot;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">2</span></pre></td><td class=\"code\"><pre><span class=\"line\">#import &lt;Masonry.h&gt;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">3</span></pre></td><td class=\"code\"><pre><span class=\"line\">#import &quot;UIButton+HTAdditions.h&quot;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">4</span></pre></td><td class=\"code\"><pre><span class=\"line\"></span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">5</span></pre></td><td class=\"code\"><pre><span class=\"line\">IB_DESIGNABLE</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">6</span></pre></td><td class=\"code\"><pre><span class=\"line\"></span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">7</span></pre></td><td class=\"code\"><pre><span class=\"line\">@interface HTMasonryView ()</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">8</span></pre></td><td class=\"code\"><pre><span class=\"line\"></span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">9</span></pre></td><td class=\"code\"><pre><span class=\"line\">@property (nonatomic, strong) UIButton *masonryButton;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">10</span></pre></td><td class=\"code\"><pre><span class=\"line\"></span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">11</span></pre></td><td class=\"code\"><pre><span class=\"line\">@end</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">12</span></pre></td><td class=\"code\"><pre><span class=\"line\"></span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">13</span></pre></td><td class=\"code\"><pre><span class=\"line\">@implementation HTMasonryView</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">14</span></pre></td><td class=\"code\"><pre><span class=\"line\"></span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">15</span></pre></td><td class=\"code\"><pre><span class=\"line\">- (instancetype)initWithFrame:(CGRect)frame &#123;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">16</span></pre></td><td class=\"code\"><pre><span class=\"line\">    if (self &#x3D; [super initWithFrame:frame]) &#123;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">17</span></pre></td><td class=\"code\"><pre><span class=\"line\">        [self setupView];</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">18</span></pre></td><td class=\"code\"><pre><span class=\"line\">    &#125;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">19</span></pre></td><td class=\"code\"><pre><span class=\"line\">    return self;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">20</span></pre></td><td class=\"code\"><pre><span class=\"line\">&#125;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">21</span></pre></td><td class=\"code\"><pre><span class=\"line\"></span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">22</span></pre></td><td class=\"code\"><pre><span class=\"line\">-(instancetype)initWithCoder:(NSCoder *)aDecoder &#123;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">23</span></pre></td><td class=\"code\"><pre><span class=\"line\">    if (self &#x3D; [super initWithCoder:aDecoder]) &#123;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">24</span></pre></td><td class=\"code\"><pre><span class=\"line\">        [self setupView];</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">25</span></pre></td><td class=\"code\"><pre><span class=\"line\">    &#125;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">26</span></pre></td><td class=\"code\"><pre><span class=\"line\">    return self;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">27</span></pre></td><td class=\"code\"><pre><span class=\"line\">&#125;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">28</span></pre></td><td class=\"code\"><pre><span class=\"line\"></span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">29</span></pre></td><td class=\"code\"><pre><span class=\"line\">- (void)setupView &#123;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">30</span></pre></td><td class=\"code\"><pre><span class=\"line\">    _masonryButton &#x3D; (&#123;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">31</span></pre></td><td class=\"code\"><pre><span class=\"line\">        UIButton *btn &#x3D; [UIButton buttonWithType:UIButtonTypeSystem];</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">32</span></pre></td><td class=\"code\"><pre><span class=\"line\">        btn.kCornerRadius &#x3D; 8.0f;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">33</span></pre></td><td class=\"code\"><pre><span class=\"line\">        btn.kBorderWidth &#x3D; 1.0f;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">34</span></pre></td><td class=\"code\"><pre><span class=\"line\">        btn.gBorderColor &#x3D; btn.ht_normalTitleColor;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">35</span></pre></td><td class=\"code\"><pre><span class=\"line\">        btn.ht_normalTitle &#x3D; @&quot;code创建-Masonry布局的按钮&quot;;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">36</span></pre></td><td class=\"code\"><pre><span class=\"line\">        btn.titleLabel.font &#x3D; [UIFont systemFontOfSize:14.0f];</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">37</span></pre></td><td class=\"code\"><pre><span class=\"line\">        [self addSubview:btn];</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">38</span></pre></td><td class=\"code\"><pre><span class=\"line\">        btn;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">39</span></pre></td><td class=\"code\"><pre><span class=\"line\">    &#125;);</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">40</span></pre></td><td class=\"code\"><pre><span class=\"line\">    [self layout];</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">41</span></pre></td><td class=\"code\"><pre><span class=\"line\">&#125;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">42</span></pre></td><td class=\"code\"><pre><span class=\"line\"></span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">43</span></pre></td><td class=\"code\"><pre><span class=\"line\">- (void)layout &#123;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">44</span></pre></td><td class=\"code\"><pre><span class=\"line\">    __weak __typeof(self) weakSelf &#x3D; self;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">45</span></pre></td><td class=\"code\"><pre><span class=\"line\">    [_masonryButton mas_makeConstraints:^(MASConstraintMaker *make) &#123;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">46</span></pre></td><td class=\"code\"><pre><span class=\"line\">        make.left.mas_equalTo(30);</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">47</span></pre></td><td class=\"code\"><pre><span class=\"line\">        make.right.mas_equalTo(-30);</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">48</span></pre></td><td class=\"code\"><pre><span class=\"line\">        make.top.bottom.mas_equalTo(weakSelf);</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">49</span></pre></td><td class=\"code\"><pre><span class=\"line\">    &#125;];</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">50</span></pre></td><td class=\"code\"><pre><span class=\"line\">&#125;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">51</span></pre></td><td class=\"code\"><pre><span class=\"line\"></span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">52</span></pre></td><td class=\"code\"><pre><span class=\"line\">@end</span></pre></td></tr></table></div></figure>\n<p>点开 HTMasonryView.xib 查看会发现已经渲染出了 Masonry 的布局效果。</p>\n<img src=\"/how-to-use-IBInspectable-and-IB-DESIGNABLE/dynamically-refresh-the-rendering-with-the-Masonry-layout.gif\" class=\"article-img\" title=\"通过Masonry布局动态刷新效果图\">\n\n<p>ps：如果渲染失败，查看 Editor -&gt; Automatically Refresh Views 是否勾选，尝试重启 Xcode。</p>\n<p>开启成功的特点就是 Show the Identity inspector-&gt;Custom Class-&gt;Designables:Up to date(更新完毕)/Updating(更新中)，如果显示 Build failed 建议检查布局代码。</p>\n<hr>\n<p>欢迎评论，最后-&gt; <a href=\"https://github.com/fiteen/HTIBInspectableDemo\" target=\"_blank\" rel=\"noopener\">Demo传送门</a></p>\n","prev":{"title":"iOS 逆向分析之 class-dump","link":"class-dump"},"next":{"title":"iOS 购物车设计模式浅析及代码实现","link":"iOS-shopping-cart-design-pattern-analysis-and-code-implementation"},"plink":"https://blog.fiteen.top/how-to-use-IBInspectable-and-IB-DESIGNABLE/","copyright":{"author":"FiTeen","link":"<a href=\"https://blog.fiteen.top/how-to-use-IBInspectable-and-IB-DESIGNABLE/\" title=\"iOS 自动布局进阶之巧用 IBInspectable 和 IB_DESIGNABLE\">https://blog.fiteen.top/how-to-use-IBInspectable-and-IB-DESIGNABLE/</a>","license":"Attribution-NonCommercial-NoDerivatives 4.0 International (<a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\" rel=\"external nofollow noopener\" target=\"_blank\">CC BY-NC-ND 4.0</a>)"}}