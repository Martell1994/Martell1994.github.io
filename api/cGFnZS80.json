{"per_page":10,"total":4,"current":4,"data":[{"title":"一次搞懂时间复杂度和空间复杂度","date":"2017-01-08T02:17:34.000Z","date_formatted":{"ll":"Jan 8, 2017","L":"01/08/2017","MM-DD":"01-08"},"excerpt":"<p>学习数据结构和算法时，难免提到时间复杂度（asymptotic time complexity）和空间复杂度（space complexity）的概念。</p>","link":"2017/asymptotic-time-complexity-and-space-complexity","tags":["数据结构"],"categories":["算法"]},{"title":"『2016』莫愁前路无知己","date":"2016-12-31T23:59:01.000Z","date_formatted":{"ll":"Dec 31, 2016","L":"12/31/2016","MM-DD":"12-31"},"thumbnail":"2016/annual-summary-2016/2016.png","excerpt":"<p>城西银泰喧闹的跨年倒计时还在进行，明晃晃的照灯和兴奋的人群。</p>","link":"2016/annual-summary-2016","categories":["总结"]},{"title":"如何在 Xcode 8 上安装插件","date":"2016-11-30T12:02:20.000Z","date_formatted":{"ll":"Nov 30, 2016","L":"11/30/2016","MM-DD":"11-30"},"excerpt":"<p>正式推出 Xcode 8 已有两个多月，也有不少朋友分享了安装插件的方法，笔者在这里整理了一个亲测有效的方法。</p>","link":"2016/install-plugins-on-xcode8","tags":["Xcode"],"categories":["iOS"]},{"title":"Git 手册之用 .gitignore 忽略文件","date":"2016-11-22T01:34:57.000Z","date_formatted":{"ll":"Nov 22, 2016","L":"11/22/2016","MM-DD":"11-22"},"excerpt":"<p>提交代码后我们经常发现，即使没有任何代码修改，有一些文件也会提示更新，例如：<code>UserInterfaceState.xcuserstate</code>、<code>.DS_Store</code> 等。</p>\n<p>这种情况可以通过添加 <code>.gitignore</code> 文件解决。</p>","link":"2016/git-ignore","tags":[".gitignore"],"categories":["Git"]},{"title":"《Effective Objective-C 2.0》整理（四）：协议与分类","date":"2016-09-28T20:21:06.000Z","date_formatted":{"ll":"Sep 28, 2016","L":"09/28/2016","MM-DD":"09-28"},"excerpt":"<h2 id=\"第23条：通过委托与数据源协议进行对象间通信\">第23条：通过委托与数据源协议进行对象间通信<a href=\"#第23条：通过委托与数据源协议进行对象间通信\" title=\"第23条：通过委托与数据源协议进行对象间通信\"></a></h2><p>Objective-C 开发中广泛使用“委托模式”来实现对象间的通信，该模式的主旨是：定义一套接口，某对象若想接受另一个对象的委托，则需遵从此接口，以便成为其“委托对象”（delegate）。而“另一个对象”则可以给其委托对象回传一些信息，也可以在发生相关事件时通知委托对象。</p>","link":"2016/eoc2.0-4","tags":["《Effective Objective-C 2.0》"],"categories":["iOS"]},{"title":"《Effective Objective-C 2.0》整理（三）：接口与 API 设计","date":"2016-09-22T17:55:21.000Z","date_formatted":{"ll":"Sep 22, 2016","L":"09/22/2016","MM-DD":"09-22"},"excerpt":"<h2 id=\"第15条：用前缀避免命名空间冲突\">第15条：用前缀避免命名空间冲突<a href=\"#第15条：用前缀避免命名空间冲突\" title=\"第15条：用前缀避免命名空间冲突\"></a></h2><p>Objective-C 没有其他语言那种内置的命名空间（namespace）机制，我们需要变相实现命名空间。</p>\n<p>而 Apple 宣称其保留使用所有“两字母前缀”的权利，因此我们选用的前缀应该是三个字母的，一般选用与公司、应用程序或与二者有关联之名称作为类名的前缀，并在所有代码中均只用这一前缀。</p>","link":"2016/eoc2.0-3","tags":["《Effective Objective-C 2.0》"],"categories":["iOS"]},{"title":"《Effective Objective-C 2.0》整理（二）：对象、消息、运行时","date":"2016-09-19T13:20:00.000Z","date_formatted":{"ll":"Sep 19, 2016","L":"09/19/2016","MM-DD":"09-19"},"excerpt":"<h2 id=\"第6条：理解属性这一概念\">第6条：理解“属性”这一概念<a href=\"#第6条：理解属性这一概念\" title=\"第6条：理解“属性”这一概念\"></a></h2><p>实例变量一般通过“存取方法”来访问。</p>\n<ul><li>获取方法（getter）：读取变量值</li><li>设置方法（setter）：写入变量值</li></ul>","link":"2016/eoc2.0-2","tags":["runtime","《Effective Objective-C 2.0》","原子性"],"categories":["iOS"]},{"title":"Xcode 8 新特性","date":"2016-09-14T10:10:20.000Z","date_formatted":{"ll":"Sep 14, 2016","L":"09/14/2016","MM-DD":"09-14"},"excerpt":"<p>依照苹果一贯的风格，今天，发布 iOS 10 的同时，开发者们期待已久的 Xcode 8 正式版也上线了。它更新了哪些大家感兴趣的部分呢，翻译一下 App Store 里的更新内容：</p>","link":"2016/new-in-xcode8","tags":["Xcode"],"categories":["iOS"]},{"title":"《Effective Objective-C 2.0》整理（一）：熟悉Objective-C","date":"2016-08-25T22:55:33.000Z","date_formatted":{"ll":"Aug 25, 2016","L":"08/25/2016","MM-DD":"08-25"},"excerpt":"<h2 id=\"第1条：了解-objective-c-语言的起源\">第1条：了解 Objective-C 语言的起源<a href=\"#第1条：了解-objective-c-语言的起源\" title=\"第1条：了解 Objective-C 语言的起源\"></a></h2><p>Objective-C 由消息型语言的鼻祖 <a href=\"https://en.wikipedia.org/wiki/Smalltalk\" target=\"_blank\">Smalltalk</a> 演化而来，是一门面向对象的语言，具有<strong>封装</strong>、<strong>继承</strong>、<strong>多态</strong>的特性。它还包括三大动态特性：</p>","link":"2016/eoc2.0-1","tags":["《Effective Objective-C 2.0》"],"categories":["iOS"]},{"title":"Hello World","date":"2016-08-13T00:00:00.000Z","date_formatted":{"ll":"Aug 13, 2016","L":"08/13/2016","MM-DD":"08-13"},"thumbnail":"2016/hello-world/hello-world.png","excerpt":"<p>标题是 Hexo 默认生成的，却没来由得契合。『Hello，World』——计算机发展史上的里程碑式的一笔，每一门编程语言的入门示例，Brian Kernighan 在<a href=\"https://book.douban.com/subject/1139336/\" target=\"_blank\">《C 程序设计语言》</a>中第一次引用的 Hello World 程序，源自他1973年编写的一部讲授B语言的编程教程：</p>","link":"2016/hello-world","categories":["总结"]}]}