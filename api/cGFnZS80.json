{"per_page":10,"total":4,"current":4,"data":[{"title":"《Effective Objective-C 2.0》整理（三）：接口与 API 设计","date":"2016-09-22T09:55:21.000Z","date_formatted":{"ll":"Sep 22, 2016","L":"09/22/2016","MM-DD":"09-22"},"excerpt":"<h2 id=\"第15条：用前缀避免命名空间冲突\">第15条：用前缀避免命名空间冲突<a href=\"#第15条：用前缀避免命名空间冲突\" title=\"第15条：用前缀避免命名空间冲突\"></a></h2><p>Objective-C 没有其他语言那种内置的命名空间（namespace）机制，我们需要变相实现命名空间。</p>\n<p>而 Apple 宣称其保留使用所有“两字母前缀”的权利，因此我们选用的前缀应该是三个字母的，一般选用与公司、应用程序或与二者有关联之名称作为类名的前缀，并在所有代码中均只用这一前缀。</p>","link":"2016/eoc2.0-3","tags":["《Effective Objective-C 2.0》"],"categories":["iOS"]},{"title":"《Effective Objective-C 2.0》整理（二）：对象、消息、运行时","date":"2016-09-19T05:20:00.000Z","date_formatted":{"ll":"Sep 19, 2016","L":"09/19/2016","MM-DD":"09-19"},"excerpt":"<h2 id=\"第6条：理解属性这一概念\">第6条：理解“属性”这一概念<a href=\"#第6条：理解属性这一概念\" title=\"第6条：理解“属性”这一概念\"></a></h2><p>实例变量一般通过“存取方法”来访问。</p>\n<ul><li>获取方法（getter）：读取变量值</li><li>设置方法（setter）：写入变量值</li></ul>","link":"2016/eoc2.0-2","tags":["objc_msgSend","《Effective Objective-C 2.0》","原子性"],"categories":["iOS"]},{"title":"《Effective Objective-C 2.0》整理（一）：熟悉Objective-C","date":"2016-08-25T14:55:33.000Z","date_formatted":{"ll":"Aug 25, 2016","L":"08/25/2016","MM-DD":"08-25"},"excerpt":"<h2 id=\"第1条：了解-objective-c-语言的起源\">第1条：了解 Objective-C 语言的起源<a href=\"#第1条：了解-objective-c-语言的起源\" title=\"第1条：了解 Objective-C 语言的起源\"></a></h2><p>Objective-C 由消息型语言的鼻祖 <a href=\"https://en.wikipedia.org/wiki/Smalltalk\" target=\"_blank\">Smalltalk</a> 演化而来，是一门面向对象的语言，具有<strong>封装</strong>、<strong>继承</strong>、<strong>多态</strong>的特性。它还包括三大动态特性：</p>\n<ul><li>动态类型：id 类型，静态类型是弱类型，动态类型是强类型</li><li>动态绑定：基于动态类型，一旦类型被确定，对象对应的属性和相应消息都被确定</li><li>动态加载：按需加载，例如不同机型适配，加载图片（1x/2x/3x），按需加载可执行代码，而非所有组件</li></ul>","link":"2016/eoc2.0-1","tags":["《Effective Objective-C 2.0》"],"categories":["iOS"]},{"title":"Hello World","date":"2016-08-12T16:00:00.000Z","date_formatted":{"ll":"Aug 13, 2016","L":"08/13/2016","MM-DD":"08-13"},"thumbnail":"2016/hello-world/hello-world.png","excerpt":"<p>标题是 Hexo 默认生成的，却没来由得契合。『Hello，World』——计算机发展史上的里程碑式的一笔，每一门编程语言的入门示例，Brian Kernighan 在<a href=\"https://book.douban.com/subject/1139336/\" target=\"_blank\">《C 程序设计语言》</a>中第一次引用的 Hello World 程序，源自他1973年编写的一部讲授B语言的编程教程：</p>","link":"2016/hello-world","categories":["总结"]}]}