{"per_page":10,"total":3,"current":2,"data":[{"title":"Mac 下避免 rm 引发的血案","date":"2018-04-12T13:53:11.000Z","date_formatted":{"ll":"Apr 12, 2018","L":"04/12/2018","MM-DD":"04-12"},"excerpt":"<p>习惯使用终端的用户，常会用 <code>rm -fr</code> 命令执行删除操作，但是这种删除的方式不会出现在废纸篓中，一旦误删，要想找回就比较麻烦。近期听说的此类血案也比较多，为了避免造成悲剧，推荐使用 trash 命令来执行删除。</p>\n<h3 id=\"安装-trash\">安装 trash<a href=\"2018-04-12-avoid-rm-induced-bloody-cases-under-Mac#安装-trash\"></a></h3><p>通过 Homebrew 安装 <a href=\"https://github.com/ali-rantakari/trash\" target=\"_blank\" rel=\"noopener\">Trash</a></p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span></pre></td><td class=\"code\"><pre><span class=\"line\">$ brew install trash</span></pre></td></tr></table></div></figure>\n\n<p>安装成功后，可以通过 <code>trash -fr filename</code>命令删除文件，且文件会移到废纸篓中。</p>","link":"2018-04-12-avoid-rm-induced-bloody-cases-under-Mac","tags":["rm"],"categories":["技巧"]},{"title":"iOS 中 framework 和 bundle 的制作","date":"2018-01-05T05:57:10.000Z","date_formatted":{"ll":"Jan 5, 2018","L":"01/05/2018","MM-DD":"01-05"},"excerpt":"<h2 id=\"Framework\">Framework<a href=\"2018-01-05-making-frameworks-and-bundles-in-iOS#Framework\"></a></h2><p>Framework 是资源的集合，将静态库和其头文件包含到一个结构中，让 Xcode 可以方便地把它纳入到你的项目中。</p>\n<p>在运行时，库中按你的想法暴露需要的头文件，整个工程都可以调用暴露出来的接口和参数，这样减少了内存消耗，提高了系统的性能。</p>\n<h3 id=\"为什么使用-framework\">为什么使用 framework<a href=\"2018-01-05-making-frameworks-and-bundles-in-iOS#为什么使用-framework\"></a></h3><p>与别人分享自己开发的组件，有两种方式。</p>\n<ul>\n<li>直接提供源代码。</li>\n<li>将组件代码编译成静态库，供他人调用。</li>\n</ul>","link":"2018-01-05-making-frameworks-and-bundles-in-iOS","tags":["SDK"],"categories":["iOS"]},{"title":"『2017』去年今日此门中","date":"2017-12-31T03:59:02.000Z","date_formatted":{"ll":"Dec 31, 2017","L":"12/31/2017","MM-DD":"12-31"},"excerpt":"<p>步入社会的第二年，做一个简单的总结：</p>\n<h3 id=\"工作\">工作<a href=\"2017-12-31-annual-summary-2017#工作\"></a></h3><p>2017年在职业成长上的几点收获：</p>\n<ul>\n<li>年初，获得年度优秀员工</li>\n<li>年中，考出《系统集成项目管理工程师》证书</li>\n<li>年底，入职挖财</li>\n</ul>\n<p>考证准备了两三个月，看了好久教学视频，刷了厚厚的一沓题，感觉当初可以直接尝试一下高级证书的考试，怕准备时间不够就报了中级，也许对自己要求高一点，会得到更好的结果。</p>","link":"2017-12-31-annual-summary-2017","categories":["总结"]},{"title":"iOS 逆向分析之 class-dump","date":"2017-10-04T16:13:05.000Z","date_formatted":{"ll":"Oct 5, 2017","L":"10/05/2017","MM-DD":"10-05"},"excerpt":"<h2 id=\"class-dump\">class-dump<a href=\"2017-10-05-class-dump#class-dump\"></a></h2><p>class-dump 是一个命令行工具，通过利用 Objective-C 语言的 runtime 特性，提取存储在 Mach-O 文件中的类文件、协议、分类等信息，并统一表现在 .h 头文件中。</p>\n<h3 id=\"安装\">安装<a href=\"2017-10-05-class-dump#安装\"></a></h3><ol>\n<li><p>下载 <a href=\"http://stevenygard.com/download/class-dump-3.5.dmg\" target=\"_blank\" rel=\"noopener\">class-dump-3.5.dmg</a>（若链接无效，请戳<a href=\"!http://stevenygard.com/projects/class-dump/\">官方网址</a>）</p>\n</li>\n<li><p>打开终端，输入</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span></pre></td><td class=\"code\"><pre><span class=\"line\">open &#x2F;usr&#x2F;local&#x2F;bin</span></pre></td></tr></table></div></figure>\n</li>\n<li><p>将下载拿到的 class-dump 拷贝到 /usr/local/bin 目录下</p>\n</li>\n<li><p>赋予其可执行权限，终端输入:</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span></pre></td><td class=\"code\"><pre><span class=\"line\">sudo chmod 777 &#x2F;usr&#x2F;local&#x2F;bin&#x2F;class-dump</span></pre></td></tr></table></div></figure>\n</li>\n<li><p>至此安装成功，并可以通过 <code>class-dump --help</code> 查看用法和版本</p>\n</li>\n</ol>","link":"2017-10-05-class-dump","tags":["逆向"],"categories":["iOS"]},{"title":"iOS 自动布局进阶之巧用 IBInspectable 和 IB_DESIGNABLE","date":"2017-08-24T02:33:20.000Z","date_formatted":{"ll":"Aug 24, 2017","L":"08/24/2017","MM-DD":"08-24"},"excerpt":"<p>交互设计和 UI 设计水准很大程度影响着用户对应用的评价，iOS 开发发展至今已逾10年，开发者对于界面 UI 编码的习惯逐渐分化成三大流派：</p>\n<ul>\n<li>code - 易追踪、可复用、便于版本控制，但不直观</li>\n<li>xib - 简单便捷、直观、一一对应，但易冲突</li>\n<li>storyboard - 逻辑清晰、简单易用、直观高效，虽易冲突、复用性不佳，但仍是未来趋势</li>\n</ul>\n<p>xib 和 storyboard 均采用了 Interface Builder（IB）来生成 GUI，通过面板上简单的拖拽替代繁琐冗余的 code 来构建页面。但我们经常发现，既有的功能并不能完全满足布局的需要，那么，我们可以通过在特定的位置定义可视化属性 <code>IBInspectable</code>、定义宏 <code>IB_DESIGNABLE</code> 来精简代码。</p>","link":"2017-08-24-how-to-use-IBInspectable-and-IB-DESIGNABLE","tags":["iOS自动布局"],"categories":["iOS"]},{"title":"iOS 购物车设计模式浅析及代码实现","date":"2017-08-17T01:03:04.000Z","date_formatted":{"ll":"Aug 17, 2017","L":"08/17/2017","MM-DD":"08-17"},"excerpt":"<h2 id=\"前言\">前言<a href=\"2017-08-17-iOS-shopping-cart-design-pattern-analysis-and-code-implementation#前言\"></a></h2><p>早期以淘宝为代表的C2C网站以“<strong>入驻店铺</strong>”模式强势打破了纯线下的商品交易格局，而近年来，通过不断的尝试与改进，各大电商平台也趋于成熟并自成体系。以京东、聚美优品、网易考拉海购、唯品会、小红书为代表B2C平台也以“<strong>自营+入驻店铺</strong>”的垂直销售模式进入消费者的视野。但也有不少企业和商家为了避免缴纳高额的入驻保证金和平台年费等，选择开发自己的商城App产品，也就是“<strong>自营</strong>”模式。</p>\n<p>购物车作为大多数商城中不可或缺的部分，其逻辑和设计往往也取决于商城本身的交易模式与商品的性质。以美团外卖、饿了么为例，作为一个主张快捷消费产品，加上配送的问题，跨店购物的模式显然不适用它，因此购物车的入口并不在一级菜单下，而是在每家店铺商品列表底部。其购物车显示的内容也相对简单，只需包括已选商品信息（名称、价格、数量、增减按钮）、餐盒费、配送费、总价即可。而对于一个功能完善的商城来说，购物车的逻辑显然会复杂许多，下文中将模仿淘宝购物车的需求，对逻辑功能进行整理和编码。</p>","link":"2017-08-17-iOS-shopping-cart-design-pattern-analysis-and-code-implementation","tags":["购物车"],"categories":["iOS"]},{"title":"阿里云直播鉴权算法","date":"2017-06-29T02:30:49.000Z","date_formatted":{"ll":"Jun 29, 2017","L":"06/29/2017","MM-DD":"06-29"},"excerpt":"<p>阿里云官方给出的文档：<a href=\"https://help.aliyun.com/document_detail/45210.html?spm=5176.2020520107.108.2.kYdTTA\" target=\"_blank\" rel=\"noopener\">用户指南-直播鉴权</a></p>\n<hr>\n<h2 id=\"参数描述\">参数描述<a href=\"2017-06-29-algorithm-of-Ali-cloud-live-authentication#参数描述\"></a></h2><p>要配置出正确的鉴权，需要明确以下几个参数：</p>\n<p><strong>推流地址</strong></p>\n<p>完整的推流地址，形如：</p>\n<p><code>rtmp://video-center.alivecdn.com/{AppName}/{StreamName}?vhost={yourdomain}</code></p>\n<p><strong>鉴权类型</strong></p>\n<p>阿里云CDN 兼容并支持 A、B、C 三种鉴权方式，具体见<a href=\"https://intl.aliyun.com/help/zh/doc-detail/27135.htm\" target=\"_blank\" rel=\"noopener\"> URL 鉴权方式</a>。这里选择的是 A 类型</p>","link":"2017-06-29-algorithm-of-Ali-cloud-live-authentication","tags":["直播"],"categories":["算法"]},{"title":"iOS 中 atomic 和 nonatomic 的区别","date":"2017-04-08T14:51:03.000Z","date_formatted":{"ll":"Apr 8, 2017","L":"04/08/2017","MM-DD":"04-08"},"excerpt":"<p><code>nonatomic</code>（非原子性） 和 <code>atomic</code>（原子性） 是 iOS 开发中用 @property 声明属性时，常用的两个关键字。</p>\n<p>看下面三种属性的声明方式：</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span></pre></td><td class=\"code\"><pre><span class=\"line\">@property(nonatomic, retain) UITextField *name;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">2</span></pre></td><td class=\"code\"><pre><span class=\"line\">@property(atomic, retain) UITextField *name;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">3</span></pre></td><td class=\"code\"><pre><span class=\"line\">@property(retain) UITextField *name;</span></pre></td></tr></table></div></figure>\n\n<p>2、3 的意思是一样的，不写的时候默认声明成 <code>atomic</code>。</p>","link":"2017-04-08-the-difference-between-the-atomic-and-nonatomic-attributes","tags":["原子性"],"categories":["iOS"]},{"title":"你应该了解的 IDFA","date":"2017-02-07T06:26:10.000Z","date_formatted":{"ll":"Feb 7, 2017","L":"02/07/2017","MM-DD":"02-07"},"excerpt":"<h4 id=\"何为-IDFA\">何为 IDFA<a href=\"2017-02-07-IDFA#何为-IDFA\"></a></h4><p>苹果 iOS6 开始新增的广告标识符（IDFA）， 全称 Identifier For Advertising，是每台 iOS 设备的唯一 ID，是投放定向广告的唯一方法。</p>\n<p>在苹果禁用 UDID 后，IDFA 成为了标识 iPhone 用户的标准。通常用于广告追踪，在同一设备的不同 App 间进行信息共享。</p>","link":"2017-02-07-IDFA","tags":["IDFA"],"categories":["iOS"]},{"title":"『2016』莫愁前路无知己","date":"2016-12-31T15:59:01.000Z","date_formatted":{"ll":"Dec 31, 2016","L":"12/31/2016","MM-DD":"12-31"},"excerpt":"<p>城西银泰喧闹的跨年倒计时还在进行，明晃晃的照灯和兴奋的人群。</p>\n<h3 id=\"往日不可追\">往日不可追<a href=\"2016-12-31-annual-summary-2016#往日不可追\"></a></h3><p>2016，我终于向四年的大学生活告别，同时也为十六年的学生生涯画上了句点。高考失利后我放弃了复读，又在父母的声声抗议中坚持填报了数学类。我知道自己表面上文静顺从，骨子里却住着一颗叛逆的灵魂。我敏感又骄傲，低调却好强，正义还心软，别扭的性格也使我前行的道路上真的走了许多弯路。</p>","link":"2016-12-31-annual-summary-2016","categories":["总结"]}]}